/*
Copyright 2024 The KCP Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// PathMappingEntryApplyConfiguration represents a declarative configuration of the PathMappingEntry type for use
// with apply.
type PathMappingEntryApplyConfiguration struct {
	Path            *string `json:"path,omitempty"`
	Backend         *string `json:"backend,omitempty"`
	BackendServerCA *string `json:"backend_server_ca,omitempty"`
	ProxyClientCert *string `json:"proxy_client_cert,omitempty"`
	ProxyClientKey  *string `json:"proxy_client_key,omitempty"`
}

// PathMappingEntryApplyConfiguration constructs a declarative configuration of the PathMappingEntry type for use with
// apply.
func PathMappingEntry() *PathMappingEntryApplyConfiguration {
	return &PathMappingEntryApplyConfiguration{}
}

// WithPath sets the Path field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Path field is set to the value of the last call.
func (b *PathMappingEntryApplyConfiguration) WithPath(value string) *PathMappingEntryApplyConfiguration {
	b.Path = &value
	return b
}

// WithBackend sets the Backend field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Backend field is set to the value of the last call.
func (b *PathMappingEntryApplyConfiguration) WithBackend(value string) *PathMappingEntryApplyConfiguration {
	b.Backend = &value
	return b
}

// WithBackendServerCA sets the BackendServerCA field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the BackendServerCA field is set to the value of the last call.
func (b *PathMappingEntryApplyConfiguration) WithBackendServerCA(value string) *PathMappingEntryApplyConfiguration {
	b.BackendServerCA = &value
	return b
}

// WithProxyClientCert sets the ProxyClientCert field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ProxyClientCert field is set to the value of the last call.
func (b *PathMappingEntryApplyConfiguration) WithProxyClientCert(value string) *PathMappingEntryApplyConfiguration {
	b.ProxyClientCert = &value
	return b
}

// WithProxyClientKey sets the ProxyClientKey field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ProxyClientKey field is set to the value of the last call.
func (b *PathMappingEntryApplyConfiguration) WithProxyClientKey(value string) *PathMappingEntryApplyConfiguration {
	b.ProxyClientKey = &value
	return b
}
